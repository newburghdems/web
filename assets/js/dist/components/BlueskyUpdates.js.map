{"version":3,"file":"BlueskyUpdates.js","names":["React","useState","useEffect","Loader2","BskyAgent","RichText","AtUri","formatTimeAgo","date","seconds","Math","floor","Date","intervals","year","month","week","day","hour","minute","unit","secondsInUnit","Object","entries","interval","getBskyPostUrl","postUri","atUri","collection","did","host","rkey","error","console","BlueskyUpdates","posts","setPosts","loading","setLoading","setError","translations","setTranslations","lang","setLang","container","document","getElementById","pageLang","dataset","window","siteTranslations","home","bluesky_updates","fetchPosts","agent","service","response","api","app","bsky","feed","getAuthorFeed","actor","limit","formattedPosts","data","map","item","imageUrl","altText","post","embed","images","length","fullsize","alt","uri","createdAt","record","filter","err","message","createElement","className","Array","_","i","key","error_loading","no_posts","index","href","target","rel","src","toLocaleDateString"],"sources":["../../src/components/BlueskyUpdates.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Loader2} from 'lucide-react';\nimport {BskyAgent, RichText, AtUri} from '@atproto/api';\n\nconst formatTimeAgo = (date) => {\n  const seconds = Math.floor((new Date() - new Date(date)) / 1000);\n  const intervals = {\n    year: 31536000,\n    month: 2592000,\n    week: 604800,\n    day: 86400,\n    hour: 3600,\n    minute: 60\n  };\n\n  for (const [unit, secondsInUnit] of Object.entries(intervals)) {\n    const interval = Math.floor(seconds / secondsInUnit);\n    if (interval >= 1) {\n      return `${interval} ${unit}${interval !== 1 ? 's' : ''} ago`;\n    }\n  }\n  return 'just now';\n};\n\nfunction getBskyPostUrl(postUri) {\n  try {\n    const atUri = new AtUri(postUri);\n    if (atUri.collection === 'app.bsky.feed.post') {\n      const did = atUri.host;\n      const rkey = atUri.rkey;\n      return `https://bsky.app/profile/${did}/post/${rkey}`;\n    } else {\n      return null; // Not a post URI\n    }\n  } catch (error) {\n    console.error('Error parsing URI:', error);\n    return null; // Invalid URI\n  }\n}\n\nconst BlueskyUpdates = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [translations, setTranslations] = useState({});\n  const [lang, setLang] = useState('en');\n\n  // Load translations based on the current language\n  useEffect(() => {\n    // Get the language from the data attribute\n    const container = document.getElementById('bluesky-updates');\n    const pageLang = container?.dataset?.lang || 'en';\n    setLang(pageLang);\n\n    if (window.siteTranslations && window.siteTranslations[pageLang]) {\n      setTranslations(window.siteTranslations[pageLang].home.bluesky_updates);\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const agent = new BskyAgent({service: 'https://public.api.bsky.app'});\n\n        const response = await agent.api.app.bsky.feed.getAuthorFeed({\n          actor: 'newburghdems.org',\n          limit: 4\n        });\n\n\n        const formattedPosts = response.data.feed.map(item => {\n          let imageUrl = null;\n          let altText = 'Bluesky post image'; // Default alt text\n\n          // Check for image embed\n          if (item.post.embed && item.post.embed.images && item.post.embed.images.length > 0) {\n            imageUrl = item.post.embed.images[0].fullsize; // Or .thumb if preferred for previews\n            altText = item.post.embed.images[0].alt || altText;\n          }\n\n          // We only want to display posts that have an image\n          if (imageUrl) {\n            return {\n              uri: getBskyPostUrl(item.post.uri),\n              imageUrl: imageUrl,\n              altText: altText,\n              createdAt: item.post.record.createdAt // [cite: 304]\n            };\n          }\n          return null; // If no image, this post will be filtered out\n        }).filter(post => post !== null);\n\n        setPosts(formattedPosts);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"px-6\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6\">\n            {[...Array(4)].map((_, i) => ( // Skeleton for 4 posts\n              <div key={i} className=\"bg-white p-4 rounded-lg shadow-md h-full\"> {/* [cite: 306] */}\n                <div className=\"animate-pulse\">\n                  <div className=\"w-full h-48 bg-gray-300 rounded mb-3\"></div> {/* Image placeholder */}\n                  <div className=\"h-3 bg-gray-300 rounded w-1/4\"></div> {/* Date placeholder */}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"px-6\">\n          <p className=\"text-center text-red-500\">{translations.error_loading || 'Could not load updates. Please try again later.'}</p>\n          <p className=\"text-center text-gray-500\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (posts.length === 0) {\n    return (\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"px-6\">\n          <p className=\"text-center text-gray-600\">{translations.no_posts || 'No image posts found at the moment.'}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto\">\n      <div className=\"px-6\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6\">\n          {posts.map((post, index) => (\n            <a\n              key={index} // [cite: 313]\n              href={post.uri}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"block group\"\n            >\n              <div className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 h-full\">\n                {post.imageUrl && (\n                  <img\n                    src={post.imageUrl}\n                    alt={post.altText}\n                    className=\"w-full object-cover group-hover:opacity-90 transition-opacity\"\n                  />\n                )}\n                <div className=\"p-3\">\n                  <p className=\"text-xs text-gray-500\">\n                    {new Date(post.createdAt).toLocaleDateString('en-US', {\n                      month: 'short',\n                      day: 'numeric',\n                      year: 'numeric'\n                    })}\n                  </p>\n                </div>\n              </div>\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlueskyUpdates;\n"],"mappings":"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","ignoreList":[]}